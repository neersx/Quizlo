# ┌───────────────────────────────────────────────────────┐
# │ 1) Redirect all HTTP → HTTPS, non-www + www to quizloai.com
# └───────────────────────────────────────────────────────┘
server {
    listen 80;
    server_name quizloai.com www.quizloai.com;
    return 301 https://quizloai.com$request_uri;
}

# ┌───────────────────────────────────────────────────────┐
# │ 2) HTTPS server block for both quizloai.com + www
# └───────────────────────────────────────────────────────┘
server {
    listen       443 ssl http2;
    server_name  quizloai.com www.quizloai.com;

    # your existing certs
    ssl_certificate     /home/neers/ssl/quizloai/quizloai_com-fullchain.crt;
    ssl_certificate_key /home/neers/ssl/quizloai/quizloai.com.key;

    # ─── Angular ─────────────────────────────────────────
    root   /var/www/quizlo;
    index  index.html index.htm;

    gzip on;
    gzip_types text/plain application/javascript application/json text/css application/xml;
    gzip_proxied no-cache no-store private expired auth;

    # 2.a) Static/app routes → serve files or fall back to index.html
    location / {
        try_files $uri $uri/ /index.html;
    }

    # ─── .NET API ────────────────────────────────────────
    # Assumes your .NET service is listening on localhost:6000
    # (adjust port or use a unix socket if you have one)
    location /api/ {
        proxy_pass         http://127.0.0.1:6000;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection keep-alive;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }
}
